
> # File name: figure6_SIfigure1.R
> # In: 
> #   - replication_data.RData
> # Out: 
> #   - /Data/Results/tjbalWgtsNEW.RData (saving time re-estimating the weights)
> #   - /Figures/figure6.pdf
> #   - /Figures/SI_figure1.pdf
> 
> require(lme4)

> require(lfe)

> require(MatchIt)

> require(WeightIt)

> require(tjbal)

> require(optmatch)

> require(stargazer)

> require(cobalt)

> require(tidyverse)

> require(ggridges)

> rm(list = ls())

> gc()
          used  (Mb) gc trigger  (Mb) max used  (Mb)
Ncells 3283792 175.4    6292222 336.1  6292222 336.1
Vcells 6143178  46.9   32700792 249.5 40875954 311.9

> ####################################################################################################################### Loading data
> load('../Data/replication_data.RData')

> ####################################################################################################################### Loading functions
> source('./helper_functions.R')

> ####################################################################################################################### Preparing variables
> Y <- paste0(c("pct_","VAP_","pcttw_"),"sanders")

> D <- unlist(lapply(c("sc_","ln_"),function(x) paste0(x,paste0(c("county_","DMA_","state_"),"cases"))))

> FE <- c("0","DMA_CODE","date")

> covariates <- c("sc_CTY_LTHS","sc_CTY_CollUp",
+                 "sc_CTY_LT30yo","sc_CTY_60Up",
+                 "sc_CTY_Below_poverty_level_AGE_18_64","sc_CTY_Female_hher_no_husbandhh",
+                 "sc_CTY_Unem_rate_pop_16_over","sc_CTY_Labor_Force_Part_Rate_pop_16_over",
+                 "sc_CTY_Manufactur","sc_CTY_Md_inc_hhs",
+                 "sc_CTY_POPPCT_RURAL","sc_CTY_Speak_only_English","sc_CTY_White","sc_CTY_Black_or_African_American",
+                 "ln_CTY_tot_pop","sc_turnout_pct_20")

> # SI Figure 1
> set.seed(123)

> treatInd <- "March17Cases"

> vd <- '2020-03-17'

> d <- 'ln_DMA_cases'

> est <- 'meanfirst'

> treatInd <- paste0("DMA_",treatInd)

> forTjbalAnal$treatGroup <- ifelse(forTjbalAnal$voteDate == vd & forTjbalAnal[[treatInd]] > 0,1,0)

> forTjbalAnal$treat <- ifelse(forTjbalAnal$treatGroup == 1 & forTjbalAnal$date > as.Date("2020-04-17"),1,0)

> inds <- which(forTjbalAnal$treatGroup == 1)

> inds <- unique(forTjbalAnal$stcou[inds])

> ctrlInds <- unique(forTjbalAnal$stcou[-c(which(forTjbalAnal$stcou %in% inds),which(forTjbalAnal$voteDate >= as.Date(vd)))])

> tmpTjbalAnal <- forTjbalAnal %>% filter(stcou %in% c(inds,ctrlInds))

> tjout <- try(tjbal(data = as.data.frame(tmpTjbalAnal),Y = d,D = "treat",X = unique(c(covariates,"pct_sanders16")),
+                    index = c("stcou","dateNum"),estimator = est,demean = T,vce = "fixed"))
Seek balance on:
ln_DMA_cases.dm1, ln_DMA_cases.dm2, ln_DMA_cases.dm3, ln_DMA_cases.dm4, ln_DMA_cases.dm5, ln_DMA_cases.dm6, ln_DMA_cases.dm7, ln_DMA_cases.dm8, ln_DMA_cases.dm9, ln_DMA_cases.dm10, ln_DMA_cases.dm11, ln_DMA_cases.dm12, ln_DMA_cases.dm13, ln_DMA_cases.dm14, ln_DMA_cases.dm15, ln_DMA_cases.dm16, ln_DMA_cases.dm17, ln_DMA_cases.dm18, ln_DMA_cases.dm19, ln_DMA_cases.dm20, ln_DMA_cases.dm21, ln_DMA_cases.dm22, ln_DMA_cases.dm23, ln_DMA_cases.dm24, ln_DMA_cases.dm25, ln_DMA_cases.dm26, ln_DMA_cases.dm27, ln_DMA_cases.dm28, ln_DMA_cases.dm29, ln_DMA_cases.dm30, ln_DMA_cases.dm31, ln_DMA_cases.dm32, ln_DMA_cases.dm33, ln_DMA_cases.dm34, ln_DMA_cases.dm35, ln_DMA_cases.dm36, ln_DMA_cases.dm37, ln_DMA_cases.dm38, ln_DMA_cases.dm39, ln_DMA_cases.dm40, ln_DMA_cases.dm41, ln_DMA_cases.dm42, ln_DMA_cases.dm43, ln_DMA_cases.dm44, ln_DMA_cases.dm45, ln_DMA_cases.dm46, ln_DMA_cases.dm47, ln_DMA_cases.dm48, ln_DMA_cases.dm49, ln_DMA_cases.dm50, ln_DMA_cases.dm51, ln_DMA_cases.dm52, ln_DMA_cases.dm53, ln_DMA_cases.dm54, ln_DMA_cases.dm55, ln_DMA_cases.dm56, ln_DMA_cases.dm57, ln_DMA_cases.dm58, ln_DMA_cases.dm59, ln_DMA_cases.dm60, ln_DMA_cases.dm61, ln_DMA_cases.dm62, ln_DMA_cases.dm63, ln_DMA_cases.dm64, ln_DMA_cases.dm65, ln_DMA_cases.dm66, ln_DMA_cases.dm67, ln_DMA_cases.dm68, ln_DMA_cases.dm69, ln_DMA_cases.dm70, ln_DMA_cases.dm71, ln_DMA_cases.dm72, ln_DMA_cases.dm73, ln_DMA_cases.dm74, ln_DMA_cases.dm75, ln_DMA_cases.dm76, ln_DMA_cases.dm77, ln_DMA_cases.dm78, ln_DMA_cases.dm79, ln_DMA_cases.dm80, ln_DMA_cases.dm81, ln_DMA_cases.dm82, ln_DMA_cases.dm83, ln_DMA_cases.dm84, ln_DMA_cases.dm85, ln_DMA_cases.dm86, ln_DMA_cases.dm87, ln_DMA_cases.dm88, sc_CTY_LTHS, sc_CTY_CollUp, sc_CTY_LT30yo, sc_CTY_60Up, sc_CTY_Below_poverty_level_AGE_18_64, sc_CTY_Female_hher_no_husbandhh, sc_CTY_Unem_rate_pop_16_over, sc_CTY_Labor_Force_Part_Rate_pop_16_over, sc_CTY_Manufactur, sc_CTY_Md_inc_hhs, sc_CTY_POPPCT_RURAL, sc_CTY_Speak_only_English, sc_CTY_White, sc_CTY_Black_or_African_American, ln_CTY_tot_pop, sc_turnout_pct_20, pct_sanders16 

Optimization:
bias.ratio = 0.0077; num.dims = 59 (mbal)

Balance Table
                                         mean.tr mean.co.pre mean.co.pst  sd.tr sd.co.pre sd.co.pst diff.pre diff.pst
ln_DMA_cases.dm1                         -1.7787     -1.4174     -1.7664 0.7655    0.8192    0.7666  -0.4720  -0.0161
ln_DMA_cases.dm2                         -1.7787     -1.4174     -1.7664 0.7655    0.8192    0.7666  -0.4720  -0.0161
ln_DMA_cases.dm3                         -1.7787     -1.4174     -1.7664 0.7655    0.8192    0.7666  -0.4720  -0.0161
ln_DMA_cases.dm4                         -1.7738     -1.4174     -1.7664 0.7532    0.8192    0.7666  -0.4732  -0.0098
ln_DMA_cases.dm5                         -1.7738     -1.4169     -1.7664 0.7532    0.8179    0.7666  -0.4738  -0.0098
ln_DMA_cases.dm6                         -1.7689     -1.4159     -1.7664 0.7475    0.8156    0.7666  -0.4722  -0.0033
ln_DMA_cases.dm7                         -1.7689     -1.4159     -1.7664 0.7475    0.8156    0.7666  -0.4722  -0.0033
ln_DMA_cases.dm8                         -1.7689     -1.4159     -1.7664 0.7475    0.8156    0.7666  -0.4722  -0.0033
ln_DMA_cases.dm9                         -1.7689     -1.4159     -1.7664 0.7475    0.8156    0.7666  -0.4722  -0.0033
ln_DMA_cases.dm10                        -1.7660     -1.4159     -1.7664 0.7423    0.8156    0.7666  -0.4716   0.0006
ln_DMA_cases.dm11                        -1.7660     -1.4155     -1.7664 0.7423    0.8143    0.7666  -0.4723   0.0006
ln_DMA_cases.dm12                        -1.7660     -1.4150     -1.7664 0.7423    0.8131    0.7666  -0.4729   0.0006
ln_DMA_cases.dm13                        -1.7660     -1.4134     -1.7664 0.7423    0.8094    0.7666  -0.4751   0.0006
ln_DMA_cases.dm14                        -1.7660     -1.4134     -1.7664 0.7423    0.8094    0.7666  -0.4751   0.0006
ln_DMA_cases.dm15                        -1.7660     -1.4134     -1.7664 0.7423    0.8094    0.7666  -0.4751   0.0006
ln_DMA_cases.dm16                        -1.7660     -1.4134     -1.7664 0.7423    0.8094    0.7666  -0.4751   0.0006
ln_DMA_cases.dm17                        -1.7660     -1.4134     -1.7664 0.7423    0.8094    0.7666  -0.4751   0.0006
ln_DMA_cases.dm18                        -1.7660     -1.4134     -1.7664 0.7423    0.8094    0.7666  -0.4751   0.0006
ln_DMA_cases.dm19                        -1.7660     -1.4134     -1.7664 0.7423    0.8094    0.7666  -0.4751   0.0006
ln_DMA_cases.dm20                        -1.7660     -1.4134     -1.7664 0.7423    0.8094    0.7666  -0.4751   0.0006
ln_DMA_cases.dm21                        -1.7660     -1.4129     -1.7664 0.7423    0.8089    0.7666  -0.4757   0.0006
ln_DMA_cases.dm22                        -1.7660     -1.4129     -1.7664 0.7423    0.8089    0.7666  -0.4757   0.0006
ln_DMA_cases.dm23                        -1.7660     -1.4124     -1.7664 0.7423    0.8083    0.7666  -0.4763   0.0006
ln_DMA_cases.dm24                        -1.7660     -1.4122     -1.7664 0.7423    0.8081    0.7666  -0.4767   0.0006
ln_DMA_cases.dm25                        -1.7660     -1.4122     -1.7664 0.7423    0.8081    0.7666  -0.4767   0.0006
ln_DMA_cases.dm26                        -1.7660     -1.4122     -1.7664 0.7423    0.8081    0.7666  -0.4767   0.0006
ln_DMA_cases.dm27                        -1.7660     -1.4122     -1.7664 0.7423    0.8081    0.7666  -0.4767   0.0006
ln_DMA_cases.dm28                        -1.7660     -1.4122     -1.7664 0.7423    0.8081    0.7666  -0.4767   0.0006
ln_DMA_cases.dm29                        -1.7660     -1.4122     -1.7664 0.7423    0.8081    0.7666  -0.4767   0.0006
ln_DMA_cases.dm30                        -1.7660     -1.4122     -1.7664 0.7423    0.8081    0.7666  -0.4767   0.0006
ln_DMA_cases.dm31                        -1.7660     -1.4117     -1.7664 0.7423    0.8084    0.7666  -0.4773   0.0006
ln_DMA_cases.dm32                        -1.7660     -1.4109     -1.7662 0.7423    0.8076    0.7664  -0.4784   0.0003
ln_DMA_cases.dm33                        -1.7660     -1.4109     -1.7662 0.7423    0.8076    0.7664  -0.4784   0.0003
ln_DMA_cases.dm34                        -1.7660     -1.4109     -1.7662 0.7423    0.8076    0.7664  -0.4784   0.0003
ln_DMA_cases.dm35                        -1.7660     -1.4081     -1.7654 0.7423    0.8063    0.7656  -0.4822  -0.0008
ln_DMA_cases.dm36                        -1.7660     -1.4076     -1.7647 0.7423    0.8057    0.7651  -0.4828  -0.0017
ln_DMA_cases.dm37                        -1.7660     -1.4006     -1.7626 0.7423    0.7995    0.7655  -0.4923  -0.0046
ln_DMA_cases.dm38                        -1.7660     -1.4006     -1.7626 0.7423    0.7995    0.7655  -0.4923  -0.0046
ln_DMA_cases.dm39                        -1.7660     -1.3989     -1.7625 0.7423    0.7963    0.7655  -0.4946  -0.0047
ln_DMA_cases.dm40                        -1.7640     -1.3978     -1.7625 0.7395    0.7953    0.7655  -0.4952  -0.0020
ln_DMA_cases.dm41                        -1.7484     -1.3940     -1.7497 0.7308    0.7932    0.7581  -0.4849   0.0018
ln_DMA_cases.dm42                        -1.7468     -1.3869     -1.7429 0.7292    0.7892    0.7617  -0.4936  -0.0053
ln_DMA_cases.dm43                        -1.7398     -1.3819     -1.7418 0.7294    0.7874    0.7636  -0.4908   0.0027
ln_DMA_cases.dm44                        -1.7398     -1.3765     -1.7410 0.7294    0.7857    0.7650  -0.4982   0.0016
ln_DMA_cases.dm45                        -1.7336     -1.3677     -1.7287 0.7286    0.7820    0.7600  -0.5023  -0.0067
ln_DMA_cases.dm46                        -1.7080     -1.3457     -1.7009 0.7135    0.7761    0.7551  -0.5077  -0.0099
ln_DMA_cases.dm47                        -1.6687     -1.3317     -1.6758 0.7243    0.7741    0.7502  -0.4653   0.0098
ln_DMA_cases.dm48                        -1.6657     -1.3172     -1.6609 0.7232    0.7787    0.7495  -0.4819  -0.0066
ln_DMA_cases.dm49                        -1.6551     -1.2998     -1.6540 0.7237    0.7924    0.7631  -0.4908  -0.0015
ln_DMA_cases.dm50                        -1.5368     -1.2638     -1.5361 0.7344    0.8076    0.6863  -0.3717  -0.0009
ln_DMA_cases.dm51                        -1.4743     -1.2368     -1.4733 0.7306    0.8293    0.7433  -0.3250  -0.0014
ln_DMA_cases.dm52                        -1.3684     -1.1894     -1.3680 0.7789    0.8518    0.7854  -0.2299  -0.0005
ln_DMA_cases.dm53                        -1.2995     -1.1323     -1.2989 0.8297    0.8841    0.8498  -0.2016  -0.0007
ln_DMA_cases.dm54                        -1.1996     -1.0767     -1.1993 0.8595    0.9242    0.9433  -0.1430  -0.0004
ln_DMA_cases.dm55                        -1.0680     -1.0083     -1.0679 0.9629    0.9742    1.0351  -0.0619  -0.0001
ln_DMA_cases.dm56                        -0.9313     -0.9499     -0.9314 1.0416    1.0224    1.1162   0.0178   0.0001
ln_DMA_cases.dm57                        -0.7787     -0.8747     -0.7793 1.1694    1.0835    1.2197   0.0821   0.0005
ln_DMA_cases.dm58                        -0.4315     -0.7497     -0.4327 1.3518    1.1745    1.3335   0.2355   0.0009
ln_DMA_cases.dm59                        -0.1841     -0.5781     -0.1858 1.4885    1.2987    1.5330   0.2647   0.0011
ln_DMA_cases.dm60                         0.0057     -0.3513      0.0041 1.6153    1.4393    1.6971   0.2210   0.0010
ln_DMA_cases.dm61                         0.3544     -0.1263      0.3524 1.7344    1.5619    1.8073   0.2772   0.0012
ln_DMA_cases.dm62                         0.7022      0.0564      0.6996 1.8129    1.6621    1.8233   0.3563   0.0014
ln_DMA_cases.dm63                         0.8450      0.2118      0.8424 1.8994    1.7466    1.9191   0.3334   0.0014
ln_DMA_cases.dm64                         0.9958      0.4815      0.9936 1.9882    1.8641    2.0192   0.2586   0.0011
ln_DMA_cases.dm65                         1.2695      0.9118      1.2678 2.0709    1.9634    2.0998   0.1728   0.0008
ln_DMA_cases.dm66                         1.5087      1.2285      1.5073 2.1696    2.0298    2.1770   0.1291   0.0006
ln_DMA_cases.dm67                         1.7786      1.5264      1.7772 2.2085    2.0724    2.2442   0.1142   0.0006
ln_DMA_cases.dm68                         2.0876      1.7645      2.0858 2.2213    2.1079    2.2731   0.1454   0.0008
ln_DMA_cases.dm69                         2.4470      2.0173      2.4448 2.1894    2.1204    2.2406   0.1962   0.0010
ln_DMA_cases.dm70                         2.7012      2.3038      2.6992 2.1836    2.1087    2.2212   0.1820   0.0009
ln_DMA_cases.dm71                         2.9462      2.5145      2.9443 2.1618    2.1211    2.2007   0.1997   0.0009
ln_DMA_cases.dm72                         3.2195      2.7483      3.2175 2.0992    2.1179    2.1493   0.2244   0.0009
ln_DMA_cases.dm73                         3.5097      2.9689      3.5073 2.0190    2.1053    2.0942   0.2679   0.0012
ln_DMA_cases.dm74                         3.7556      3.2161      3.7534 1.9519    2.0679    2.0338   0.2764   0.0011
ln_DMA_cases.dm75                         3.9986      3.3774      3.9958 1.8153    2.0591    1.9645   0.3422   0.0015
ln_DMA_cases.dm76                         4.1604      3.4831      4.1578 1.7381    2.0630    1.8844   0.3897   0.0015
ln_DMA_cases.dm77                         4.2985      3.6176      4.2956 1.7091    2.0373    1.8545   0.3984   0.0017
ln_DMA_cases.dm78                         4.5486      3.7894      4.5454 1.4890    1.9926    1.6821   0.5099   0.0022
ln_DMA_cases.dm79                         4.7085      3.8931      4.7053 1.3642    1.9843    1.5594   0.5977   0.0024
ln_DMA_cases.dm80                         4.7921      4.0211      4.7891 1.3774    1.9739    1.5818   0.5597   0.0022
ln_DMA_cases.dm81                         4.9551      4.1452      4.9510 1.2351    1.9497    1.4346   0.6557   0.0033
ln_DMA_cases.dm82                         5.0603      4.2210      5.0585 1.1534    1.9517    1.3680   0.7277   0.0016
ln_DMA_cases.dm83                         5.1151      4.2669      5.1113 1.1560    1.9619    1.3570   0.7337   0.0032
ln_DMA_cases.dm84                         5.1739      4.3561      5.1660 1.1595    1.9514    1.3494   0.7053   0.0067
ln_DMA_cases.dm85                         5.2800      4.4127      5.2813 1.0892    1.9483    1.2185   0.7962  -0.0012
ln_DMA_cases.dm86                         5.3273      4.4893      5.3216 1.0949    1.9444    1.2245   0.7654   0.0052
ln_DMA_cases.dm87                         5.3699      4.5644      5.3684 1.1021    1.9399    1.2267   0.7309   0.0014
ln_DMA_cases.dm88                         5.4670      4.6367      5.4627 1.0109    1.9399    1.1565   0.8214   0.0042
sc_CTY_LTHS                              -0.2256      0.1753     -0.2240 0.8185    1.0066    0.8350  -0.4897  -0.0019
sc_CTY_CollUp                             0.1857     -0.0436      0.1848 0.9035    0.9950    0.8522   0.2538   0.0010
sc_CTY_LT30yo                            -0.1192      0.0946     -0.1184 0.8403    0.8894    0.9569  -0.2544  -0.0010
sc_CTY_60Up                               0.2237      0.0016      0.2229 1.1725    0.9422    1.2862   0.1895   0.0007
sc_CTY_Below_poverty_level_AGE_18_64     -0.0927      0.0996     -0.0918 0.9017    1.0166    0.8273  -0.2133  -0.0010
sc_CTY_Female_hher_no_husbandhh           0.0264      0.1026      0.0267 0.7387    1.0497    0.9249  -0.1032  -0.0004
sc_CTY_Unem_rate_pop_16_over              0.2216      0.0739      0.2210 0.7394    1.0365    1.0362   0.1997   0.0008
sc_CTY_Labor_Force_Part_Rate_pop_16_over -0.1675     -0.0928     -0.1671 1.1370    0.9787    1.1039  -0.0657  -0.0004
sc_CTY_Manufactur                        -0.3599     -0.0565     -0.3585 0.8544    0.9698    0.7549  -0.3551  -0.0016
sc_CTY_Md_inc_hhs                         0.1833     -0.0800      0.1826 0.8271    1.0388    0.9586   0.3183   0.0009
sc_CTY_POPPCT_RURAL                      -0.5950      0.0505     -0.5923 0.9320    1.0113    1.0002  -0.6926  -0.0029
sc_CTY_Speak_only_English                -0.2408     -0.0604     -0.2402 1.0563    1.0639    1.1537  -0.1708  -0.0006
sc_CTY_White                              0.0472     -0.1213      0.0460 0.7754    1.0557    0.8460   0.2173   0.0015
sc_CTY_Black_or_African_American         -0.0577      0.1009     -0.0574 0.6150    1.0941    0.7886  -0.2579  -0.0006
ln_CTY_tot_pop                           11.2982     10.3110     11.2949 1.4932    1.4160    1.7236   0.6611   0.0022
sc_turnout_pct_20                        -0.1427      0.0214     -0.1420 0.4795    1.0670    0.7679  -0.3422  -0.0013
pct_sanders16                            45.5247     41.1093     45.5075 9.6997   16.8123   14.8822   0.4552   0.0018


> toplot <- as.data.frame(tjout$Y.bar)

> toplot$date <- seq.Date(from = as.Date("2020-01-23"),to = as.Date("2020-05-01"),length.out = nrow(tjout$Y.bar))

> getwd()
[1] "C:/Users/jimbi/Dropbox/Bisbee Honig Primary Covid Fear/APSR_CA/Replication/Code"

> pdf("../Figures/SI_figure1.pdf")

> toplot %>%
+   gather(type,value,-date) %>%
+   ggplot(aes(x = date,y = value,color = type,size = type,linetype = type,alpha = type)) + 
+   geom_line() + 
+   geom_vline(xintercept = as.Date(unique(finalDat$Date)[which(as.Date(unique(finalDat$Date)) < as.Date("2020-03-17"))]),linetype = "dashed",alpha = .6) + 
+   geom_vline(xintercept = as.Date("2020-03-17"),size = 1.2) + 
+   xlab("Date") + ylab("Number of Cases (logged)") + 
+   annotate(geom = "text",label = c("Iowa Caucuses","New Hampshire","Nevada","South Carolina","Super Tuesday","March 10","March 17"),
+            x = as.Date(c("2020-02-03","2020-02-11","2020-02-22","2020-02-29",
+                          "2020-03-03","2020-03-10","2020-03-17")),y = Inf,angle = 90,vjust = 1,hjust = 1,size = 3.5,color = "grey30") + 
+   annotate(geom = "text",label = c("Treated","Weighted","Control"),
+            y = c(7.8,7.5,6.6),x = as.Date("2020-05-02"),angle = 0,
+            parse = F,hjust = 0,vjust = .3,size = 3.5,color = "grey30") +
+   scale_linetype_manual(values = c("solid","dotted","solid")) + 
+   scale_size_manual(values = c(1.2,1.2,2.5)) +
+   scale_color_manual(values = c("red","black","black")) + 
+   scale_alpha_manual(values = c(1,1,.3)) + 
+   xlim(as.Date("2020-01-23"),as.Date("2020-05-10")) + theme_ridges() + 
+   theme(legend.position = "none") + 
+   theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
+         panel.background = element_blank(), axis.line = element_line(colour = "black"))

> dev.off()
null device 
          1 

> # Figure 6 
> set.seed(123)

> tjBalWgts <- list()

> for(vd in c("2020-03-03","2020-03-10","2020-03-17")) {
+   for(d in c("county_cases")) {
+     for(est in c("kernel")) {
+       
+       if(vd == "2020-03-03") {
+         treatInd <- "March3Cases"
+       } else if(vd == "2020-03-10") {
+         treatInd <- "March10Cases"
+       } else {
+         treatInd <- "March17Cases"
+       }
+       if(grepl("county",d)) {
+         treatInd <- paste0("county_",treatInd)
+       } else {
+         treatInd <- paste0("DMA_",treatInd)
+       }
+       
+       forTjbalAnal$treatGroup <- ifelse(forTjbalAnal$voteDate == vd & forTjbalAnal[[treatInd]] > 0,1,0)
+       forTjbalAnal$treat <- ifelse(forTjbalAnal$treatGroup == 1 & forTjbalAnal$date > as.Date("2020-04-17"),1,0)
+       
+       inds <- which(forTjbalAnal$treatGroup == 1)
+       inds <- unique(forTjbalAnal$stcou[inds])
+       ctrlInds <- unique(forTjbalAnal$stcou[-c(which(forTjbalAnal$stcou %in% inds),which(forTjbalAnal$voteDate >= as.Date(vd)))])
+       
+       ests <- finalDat %>% select(stcou)
+       for(i in 1:length(inds)) {
+         tmpTjbalAnal <- forTjbalAnal %>% filter(stcou %in% c(inds[-i],ctrlInds))
+         sink <- capture.output(tjout <- try(tjbal(data = as.data.frame(tmpTjbalAnal),Y = d,D = "treat",
+                            X = unique(c(covariates,"pct_sanders16")),seed = 123,
+                            index = c("stcou","dateNum"),estimator = est,demean = T,vce = "fixed")))
+         
+         if(class(tjout) == "try-error") { next }
+         tjout$data.wide$w <- tjout$w
+         ests <- ests %>% left_join(tjout$data.wide %>% select(stcou = unit,w),by = 'stcou')
+         colnames(ests)[which(colnames(ests) == "w")] <- paste0("w",i)
+         cat('.')
+       }
+       cat('\n')
+       
+       tjBalWgts[[vd]][[d]][[est]]$jacknife <- ests
+       tmpTjbalAnal <- forTjbalAnal %>% filter(stcou %in% c(inds,ctrlInds))
+       sink <- capture.output(tjout <- try(tjbal(data = as.data.frame(tmpTjbalAnal),Y = d,D = "treat",X = unique(c(covariates,"pct_sanders16")),
+                          index = c("stcou","dateNum"),estimator = est,demean = T,seed = 123,
+                          vce = "fixed")))
+       
+       if(class(tjout) == "try-error") { next }
+       tjout$data.wide$w <- tjout$w
+       tjBalWgts[[vd]][[d]][[est]]$full <- tjout$data.wide %>% select(stcou = unit,w)
+     }
+   }
+ }
..................
...........
............................................

> save(tjBalWgts,file = "../Data/Results/tjbalWgtsNEW.RData")

> load("../Data/Results/tjbalWgtsNEW.RData")

> resTjbal <- list()

> for(y in Y) {
+   for(geo in c("county_","DMA_")) {
+     for(d in c("March3Cases","March10Cases","March17Cases")) {
+       if(d == "March3Cases") {
+         int <- "2020-03-03"
+       } else if(d == "March10Cases") {
+         int <- "2020-03-10"
+       } else {
+         int <- "2020-03-17"
+       }
+       for(balCases in names(tjBalWgts[[int]])) {
+         for(est in names(tjBalWgts[[int]][[balCases]])) {
+           
+           if(is.null(tjBalWgts[[int]][[balCases]][[est]]$full)) { next }
+           
+           finalDat %>% left_join(tjBalWgts[[int]][[balCases]][[est]]$full) %>% 
+             left_join(tjBalWgts[[int]][[balCases]][[est]]$jacknife) %>% filter(!is.na(w)) -> tmpAnal
+           tmpAnal$post <- ifelse(tmpAnal$date == as.Date(int),1,0)
+           tmpAnal$treatGroup <- ifelse(tmpAnal[[paste0(geo,d)]] > 0,1,0)
+           tmpAnal$treat <- ifelse(tmpAnal$post == 1 & tmpAnal$treatGroup == 1,1,0)
+           tmpAnal %>% select(post,treatGroup,treat,date)
+           
+           ests <- NULL
+           for(i in colnames(tmpAnal %>% select(matches("^w\\d")))) {
+             ests <- c(ests,sum(tmpAnal[[y]]*tmpAnal[[i]],na.rm=T))
+           }
+           resTjbal[[y]][[geo]][[d]][[balCases]][[est]]$bootstrapped <- ests
+           resTjbal[[y]][[geo]][[d]][[balCases]][[est]]$lmCont <- summary(lm(as.formula(paste0(y," ~ ",balCases)),tmpAnal,weights = abs(tmpAnal$w)))$coefficients
+           resTjbal[[y]][[geo]][[d]][[balCases]][[est]]$lmBin <- summary(lm(as.formula(paste0(y," ~ treat")),tmpAnal,weights = abs(tmpAnal$w)))$coefficients
+         }
+       }
+     }
+   }
+ }
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"
Joining, by = "stcou"

> toplot <- NULL

> for(period in names(resTjbal$pcttw_sanders$DMA_)) {
+   toplot <- bind_rows(toplot,
+                       data.frame(bs = resTjbal$pcttw_sanders$county_[[period]]$county_cases$kernel$bootstrapped,
+              period = period))
+ }

> # Figure 6: 
> pdf('../Figures/figure6.pdf',width = 7,height = 5)

> toplot %>%
+   mutate(period = factor(gsub('Cases','',
+                        gsub('March','March ',period)),levels = rev(c('March 3','March 10','March 17')))) %>%
+   ggplot(aes(x = bs,y = period)) + 
+   geom_density_ridges(alpha = .7,color = 'black') + 
+   theme_ridges() + 
+   geom_vline(xintercept = 0,linetype = 'dashed') + 
+   xlab('ATT of Exposure on Sanders Support') +  ylab('Outbreak Date')
Picking joint bandwidth of 0.633

> dev.off()
null device 
          1 
